package jdk.lambda;

public class Calculate {

	public static void main(String[] args) {
		Calculate calculate = new Calculate();
		
		// 类型声明
		MathOperation addition = (int a, int b) -> a + b;
		
		// 不用类型生命
		MathOperation substraction = (a, b) -> a - b;
		
		// 大括号中的返回语句
		MathOperation multiplication = (int a, int b) -> { return a * b ; };
		
		// 没有大括号及返回语句
		MathOperation division = (int a, int b) -> a / b;
		
		
		// 写法一
		System.out.println("10 + 5 = " + calculate.operate(10, 5, addition));
		System.out.println("10 - 5 = " + calculate.operate(10, 5, substraction));
		System.out.println("10 * 5 = " + calculate.operate(10, 5, multiplication));
		System.out.println("10 / 5 = " + calculate.operate(10, 5, division));
		
		// 写法二
		System.out.println("10 + 5 = " + addition.operation(10, 5));
		
		
		// 不用括号
		GreetingService greetingService1 = message -> System.out.println("Hello " + message);
		
		// 用括号
		GreetingService greetingService2 = message -> System.out.println("Hello " + message);
		
		greetingService1.sayMessage("Runoob");
		greetingService2.sayMessage("Google");
		
	}
	
	interface MathOperation{
		int operation(int a, int b);
		default int addition(int a, int b) {
			return a + b;
		}
	}

	interface GreetingService {
		void sayMessage(String message);
	}
	
	private int operate (int a, int b, MathOperation mathOperation) {
		return mathOperation.operation(a, b);
	}
}
